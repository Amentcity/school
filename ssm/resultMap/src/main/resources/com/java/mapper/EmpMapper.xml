<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.mapper.EmpMapper">
    <!--
        字段名和属性名不一致的情况下。如何处理映射关系
        1.为查询的字段设置别名和属性名保持一致
        2.当字段满足MySQL的要求使用_,而属性满足Java的要求使用驼峰
        此时可可以在mybatis的核心配置文件中设置一个全局配置，可以自动将下划线映射成驼峰
        处理多对一的映射关系：
        1.级联方式来处理
        2.association
        3.分步查询
        处理多对一的映射关系：
        1.collection
        2.分步查询
    -->
    <!--
        resultMap:设置自定义的额映射关系
        id:唯一标识
        type:处理映射关系的实体类类型
        常用的标签
        id:处理主键和实体类中属性的映射关系
        result:处理普通字段和实体类中属性的映射关系
        association:处理多对一的映射关系（处理实体类类型的属性）
        collection:处理一对多的映射关系（处理集合类型的属性）
        column:设置映射关系中的字段名，必须是sql查询出的莫格字段
        property:处理映射关系中的属性和属性名。必须是处理的实体中的属性名
    -->
    <resultMap id="empResultMapOne" type="Emp">
        <id column="emp_id" property="empId"/>
        <result column="emp_name" property="empName"/>
        <result column="dept_id" property="dept.deptId"/>
        <result column="dept_name" property="dept.deptName"/>
    </resultMap>
    <resultMap id="empResultMap" type="Emp">
        <id column="emp_id" property="empId"/>
        <result column="emp_name" property="empName"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <!--
            association:处理多对一的映射关系（处理实体类类型的属性）
            property:设置需要处理映射关系的属性的属性名
            javaType:设置要处理的属性的类型
        -->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"/>
            <result column="dept_name" property="deptName"/>
        </association>
    </resultMap>
    <select id="getEmpByEmpId" resultMap="empResultMap">
        select * from t_emp where emp_id=#{id}
    </select>
<!--    <select id="getEmpByEmpId">-->
<!--        select * from t_emp where emp_id=#{id}-->
<!--    </select>-->
    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"/>

    </resultMap>
    <select id="getEmpAndDeptByEmpId" resultMap="empResultMap">
        select t_emp.*,t_dept.* from t_emp left join t_dept on t_emp.dept_id=t_dept.dept_id where t_emp.emp_id=#{empId};
    </select>
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"/>
        <result column="emp_name" property="empName"/>
        <!--
            property:设置需要处理映射关系的属性的属性名
            select:设置分步查询的sql的唯一标识
            column:将查询出的某个字段作为分步查询的sql的条件
            fetchType:在开启了延迟加载的环境中，通过该属性设置当前的分步查询是否使用延迟加载
            fetchType=“eager|lazy”
                eager:立即加载
                lazy:延迟加载
        -->
        <association property="dept" fetchType="eager" select="com.java.mapper.DeptMapper.getEmpAndDeptByStepTwo" column="dept_id"/>
    </resultMap>
    <select id="getEmpAndDeptByEmpStepOne" resultMap="empAndDeptByStepResultMap">
        select * from t_emp where emp_id=#{empId};
    </select>
    <select id="getDeptAndEmpByDeptStepTwo">
        select * from t_emp where dept_id=#{deptId};
    </select>
</mapper>