<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.java.controller"/>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/templates/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--第二种匹配静态资源的方式
        mvc:resources加入后框架会创建 ResourceHttpRequestHandler这个处理器对象。
        让这个对象处理静态资源的访问，不依赖tomcat服务器
        mapping:访问静态资源的uri地址，通配符**
        location:静态资源在你的项目中的位置。
        img/** 表示img下面的图片资源
    -->
    <mvc:resources mapping="img/**" location="/img/"/>
    <mvc:resources mapping="html/**" location="/html/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <!--mvc:resources和@RequestMapping有一定冲突-->
    <mvc:annotation-driven/>
</beans>